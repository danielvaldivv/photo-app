(()=>{"use strict";var t={987:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Album=void 0;const r=i(123);class o extends r.Item{constructor(t,e){super(t,e),this.picture=[]}addPicture(t){this.picture.push(t)}}e.Album=o},123:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Item=void 0,e.Item=class{constructor(t,e){this._id=t,this._title=e}get id(){return this._id}get title(){return this._title}set title(t){this._title=t}}},945:(t,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),e.PhotoOrientation=void 0,(i=e.PhotoOrientation||(e.PhotoOrientation={}))[i.Landscape=0]="Landscape",i[i.Portrait=1]="Portrait",i[i.Square=2]="Square",i[i.Panorama=3]="Panorama"},449:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Picture=void 0;const r=i(123),o=i(945);class s extends r.Item{constructor(t,e,i,r){super(t,e),this._orientation=r}get orientation(){return this._orientation}set orientation(t){this._orientation=t}toString(){return`\n            id: ${this.id},\n            title: ${this.title},\n            orientation: ${this._orientation}\n            `}}e.Picture=s,s.photoOrientation=o.PhotoOrientation},536:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.User=void 0,e.User=class{constructor(t,e,i,r){this.id=t,this.username=e,this.firstName=i,this.isPro=r,this.album=[]}addAlbum(t){this.album.push(t)}removeAlbum(t){const e=this.album.findIndex((e=>e.id===t.id));let i;return e>=0&&(i=this.album[e],this.album.splice(e,1)),i}}}},e={};function i(r){var o=e[r];if(void 0!==o)return o.exports;var s=e[r]={exports:{}};return t[r](s,s.exports,i),s.exports}(()=>{const t=i(536),e=i(987),r=i(945),o=i(449),s=new t.User(1,"danielvaldivv","Daniel",!0),n=new e.Album(15481,"Platzi Pictures"),a=new o.Picture(1,"TypeScript Course","2021-01-02",r.PhotoOrientation.Landscape);s.addAlbum(n),n.addPicture(a),console.log("user1: ",s),s.removeAlbum(n),console.log("user1: ",s)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,